name: Manual Xpra Build

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git tag or branch to check out'
        required: true
        default: 'master'
        type: string
      commit:
        description: 'Optional commit hash to check out'
        required: false
        default: ''
        type: string
      create_release:
        description: 'Create a GitHub release after build'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout build scripts
        uses: actions/checkout@v4
      - name: Print env
        run: |
          echo "[GH runner]"
          df -h
          pwd
          ls -la
          env
      - name: Fix workspace permissions
        run: sudo chmod 777 ${{ github.workspace }}

      - name: Prepare Docker image (reuse latest)
        run: |
          LATEST_IMAGE="ghcr.io/${{ github.repository_owner }}/xpra-appimage-builder/xpra-appimg-builder-centos8:latest"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          if docker pull "$LATEST_IMAGE"; then
            echo "Using cached image: $LATEST_IMAGE"
          else
            echo "Building new image: $LATEST_IMAGE"
            docker build -f Dockerfile.centos8 -t "$LATEST_IMAGE" .
            docker push "$LATEST_IMAGE"
          fi
      - name: Run build script
        run: |
          LATEST_IMAGE="ghcr.io/${{ github.repository_owner }}/xpra-appimage-builder/xpra-appimg-builder-centos8:latest"
          docker run --rm \
            -e REPO_BRANCH="${{ github.event.inputs.ref }}" \
            -e REPO_COMMIT="${{ github.event.inputs.commit }}" \
            -v ${{ github.workspace }}:/workspace "$LATEST_IMAGE"
          df -h
          pwd
          ls -la
          echo "[GH runner] Build complete"
          ls -ld ${{ github.workspace }}
          ls -lAh ${{ github.workspace }}/build

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: xpra-appimage
          path: ${{ github.workspace }}/build/Xpra-x86_64.AppImage

      - name: Get week and date
        id: weekdate
        run: |
          echo "week=$(date +%V)" >> $GITHUB_OUTPUT
          echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create-release
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: weekly-build-${{ github.run_number }}
          release_name: "Xpra Build ${{ github.event.inputs.ref }}:${{ github.event.inputs.commit }} [#${{ github.run_number }}] ${{ steps.weekdate.outputs.date }}"
          draft: false
          prerelease: true

      - name: Upload Release Asset
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build/Xpra-x86_64.AppImage
          asset_name: xpra-weekly-${{ github.run_number }}.AppImage
          asset_content_type: application/octet-stream
